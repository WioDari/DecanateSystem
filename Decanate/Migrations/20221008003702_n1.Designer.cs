// <auto-generated />
using Decanate;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Decanate.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221008003702_n1")]
    partial class n1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Decanate.Decanates", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Groupsid")
                        .HasColumnType("int");

                    b.Property<int>("Infosid")
                        .HasColumnType("int");

                    b.Property<int>("PayFlowsid")
                        .HasColumnType("int");

                    b.Property<string>("facultet")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("Groupsid");

                    b.HasIndex("Infosid");

                    b.HasIndex("PayFlowsid");

                    b.ToTable("Decanates");
                });

            modelBuilder.Entity("Decanate.Evaluations", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("value")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("Decanate.Groups", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Studentsid")
                        .HasColumnType("int");

                    b.Property<int>("end_year")
                        .HasColumnType("int");

                    b.Property<int>("group_num")
                        .HasColumnType("int");

                    b.Property<int>("start_year")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("Studentsid");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Decanate.Infos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("info_about")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Infos");
                });

            modelBuilder.Entity("Decanate.PayFlows", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("cost")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("PayFlows");
                });

            modelBuilder.Entity("Decanate.Students", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Evaluationsid")
                        .HasColumnType("int");

                    b.Property<int>("Infosid")
                        .HasColumnType("int");

                    b.Property<int>("PayFlowsid")
                        .HasColumnType("int");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("Evaluationsid");

                    b.HasIndex("Infosid");

                    b.HasIndex("PayFlowsid");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Decanate.Decanates", b =>
                {
                    b.HasOne("Decanate.Groups", "Groups")
                        .WithMany("decanates")
                        .HasForeignKey("Groupsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Decanate.Infos", "Infos")
                        .WithMany("decanates")
                        .HasForeignKey("Infosid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Decanate.PayFlows", "PayFlows")
                        .WithMany("decanates")
                        .HasForeignKey("PayFlowsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groups");

                    b.Navigation("Infos");

                    b.Navigation("PayFlows");
                });

            modelBuilder.Entity("Decanate.Groups", b =>
                {
                    b.HasOne("Decanate.Students", "Students")
                        .WithMany("groups")
                        .HasForeignKey("Studentsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Students");
                });

            modelBuilder.Entity("Decanate.Students", b =>
                {
                    b.HasOne("Decanate.Evaluations", "Evaluations")
                        .WithMany("students")
                        .HasForeignKey("Evaluationsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Decanate.Infos", "Infos")
                        .WithMany("students")
                        .HasForeignKey("Infosid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Decanate.PayFlows", "PayFlows")
                        .WithMany("students")
                        .HasForeignKey("PayFlowsid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Evaluations");

                    b.Navigation("Infos");

                    b.Navigation("PayFlows");
                });

            modelBuilder.Entity("Decanate.Evaluations", b =>
                {
                    b.Navigation("students");
                });

            modelBuilder.Entity("Decanate.Groups", b =>
                {
                    b.Navigation("decanates");
                });

            modelBuilder.Entity("Decanate.Infos", b =>
                {
                    b.Navigation("decanates");

                    b.Navigation("students");
                });

            modelBuilder.Entity("Decanate.PayFlows", b =>
                {
                    b.Navigation("decanates");

                    b.Navigation("students");
                });

            modelBuilder.Entity("Decanate.Students", b =>
                {
                    b.Navigation("groups");
                });
#pragma warning restore 612, 618
        }
    }
}
