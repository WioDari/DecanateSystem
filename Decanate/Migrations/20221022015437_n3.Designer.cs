// <auto-generated />
using Decanate;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Decanate.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221022015437_n3")]
    partial class n3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Decanate.Decanates", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("facultet")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Decanates");
                });

            modelBuilder.Entity("Decanate.Evaluations", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("students_id")
                        .HasColumnType("int");

                    b.Property<int>("value")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("students_id");

                    b.ToTable("Evaluations");
                });

            modelBuilder.Entity("Decanate.Groups", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("decanates_id")
                        .HasColumnType("int");

                    b.Property<int>("end_year")
                        .HasColumnType("int");

                    b.Property<int>("group_num")
                        .HasColumnType("int");

                    b.Property<int>("start_year")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("decanates_id");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Decanate.Infos", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("decanates_id")
                        .HasColumnType("int");

                    b.Property<string>("info_about")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("students_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("decanates_id");

                    b.HasIndex("students_id");

                    b.ToTable("Infos");
                });

            modelBuilder.Entity("Decanate.PayFlows", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("cost")
                        .HasColumnType("int");

                    b.Property<int>("decanates_id")
                        .HasColumnType("int");

                    b.Property<int>("students_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("decanates_id");

                    b.HasIndex("students_id");

                    b.ToTable("PayFlows");
                });

            modelBuilder.Entity("Decanate.Students", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<int>("groups_id")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("groups_id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Decanate.Evaluations", b =>
                {
                    b.HasOne("Decanate.Students", "students_")
                        .WithMany("evaluations")
                        .HasForeignKey("students_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("students_");
                });

            modelBuilder.Entity("Decanate.Groups", b =>
                {
                    b.HasOne("Decanate.Decanates", "decanates_")
                        .WithMany("groups")
                        .HasForeignKey("decanates_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("decanates_");
                });

            modelBuilder.Entity("Decanate.Infos", b =>
                {
                    b.HasOne("Decanate.Decanates", "decanates_")
                        .WithMany("infos")
                        .HasForeignKey("decanates_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Decanate.Students", "students_")
                        .WithMany("infos")
                        .HasForeignKey("students_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("decanates_");

                    b.Navigation("students_");
                });

            modelBuilder.Entity("Decanate.PayFlows", b =>
                {
                    b.HasOne("Decanate.Decanates", "decanates_")
                        .WithMany("payflows")
                        .HasForeignKey("decanates_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Decanate.Students", "students_")
                        .WithMany("payflows")
                        .HasForeignKey("students_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("decanates_");

                    b.Navigation("students_");
                });

            modelBuilder.Entity("Decanate.Students", b =>
                {
                    b.HasOne("Decanate.Groups", "groups_")
                        .WithMany("students")
                        .HasForeignKey("groups_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("groups_");
                });

            modelBuilder.Entity("Decanate.Decanates", b =>
                {
                    b.Navigation("groups");

                    b.Navigation("infos");

                    b.Navigation("payflows");
                });

            modelBuilder.Entity("Decanate.Groups", b =>
                {
                    b.Navigation("students");
                });

            modelBuilder.Entity("Decanate.Students", b =>
                {
                    b.Navigation("evaluations");

                    b.Navigation("infos");

                    b.Navigation("payflows");
                });
#pragma warning restore 612, 618
        }
    }
}
